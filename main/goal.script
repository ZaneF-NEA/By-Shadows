-- When the PC touches the goal, the level ends successfully.
-- the program will create a save file and add the time and date to the file where appropriate

function on_message(self, message_id, message, sender)
	if not marathonMode or (marathonMode and level == "4") then -- end level normally or completed marathon mode
		-- load record time gui
		msg.post("main:/main#record_time", "load")
		msg.post("main:/main#record_time", "init")
		msg.post("main:/main#record_time", "enable") -- show record time gui
		msg.post(levelURL, "set_time_step", {factor = 0, mode = 0}) -- freeze the level to indicate it is over
	else -- not final level in marathon mode
		msg.post(levelURL, "unload") -- exit this level
		msg.post("main:/main#level"..tostring(level + 1).."_proxy", "load") -- load next level
		msg.post("main:/main#level"..tostring(level + 1).."_proxy", "init")
		msg.post("main:/main#level"..tostring(level + 1).."_proxy", "enable")
	end
end